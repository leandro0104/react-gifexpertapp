{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAmB9C,OACQ,uBAAMC,SAZO,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAG,OAAMP,GAAN,mBAAoBO,OACtCN,EAAc,MAOd,UACA,6BAAKD,IACL,uBAAOQ,KAAK,OAAOC,MAAOT,EAAYU,SAlBpB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,c,+BCRlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAGbC,EAHa,gDAGkCC,UAAUH,GAH5C,+DAIAI,MAAMF,GAJN,cAIbG,EAJa,gBAKEA,EAAKC,OALP,uBAKZC,EALY,EAKZA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAIpC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCLHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAc,IAAD,EAEZd,mBAAS,CAC/BqB,KAAK,GACLa,SAAQ,IAJ0B,mBAE/BC,EAF+B,KAExBC,EAFwB,KAoBtC,OAbAC,qBAAU,WAENxB,EAAQC,GACPwB,MAAK,SAAAC,GACEH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAIvB,CAACpB,IAGIqB,EDjByBK,CAAa1B,GAAhCa,EAFsB,EAE5BN,KAAca,EAFc,EAEdA,QAGrB,OACI,qCACA,oBAAIJ,UAAU,oCAAd,SAAoDhB,IAElDoB,GAAW,mBAAGJ,UAAU,mCAAb,uBACb,qBAAKA,UAAU,YAAf,SAGYH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEIA,GADCA,EAAIC,aEdpBgB,EAAe,WAAO,IAAD,EAEMzC,mBAAS,CAAC,cAFhB,mBAEvB0C,EAFuB,KAEX3C,EAFW,KAS9B,OACE,qCACA,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEI2C,EAAWnB,KAAK,SAAAT,GAAQ,OACtB,cAAC,EAAD,CAEAA,SAAUA,GADLA,Y,MClBjB6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.a53fe073.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) =>{\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length > 2){\r\n            setCategories( cat => [ inputValue,...cat]);\r\n            setInputValue('');\r\n        }\r\n        //console.log('Submit Hecho');\r\n        \r\n    } \r\n\r\n    return (\r\n            <form onSubmit={ handleSubmit }>\r\n            <h1>{inputValue}</h1>\r\n            <input type=\"text\" value={inputValue} onChange={handleInputChange}/>\r\n            </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories : PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async( category ) =>{\r\n\r\n    \r\n    const url = `http://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=ePT1QJI8VGgutE2FE7UdHXlcBLE0ba16`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    const gifs = data.map(img => {\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    \r\n    //console.log(id, title,url);\r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n    \r\n    const {data: images, loading} = useFetchGifs(category);\r\n\r\n    \r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__fadeIn\">{ category}</h3>\r\n\r\n        { loading && <p className=\"animate__animated animate__flash\">Loading..</p>}\r\n        <div className=\"card-grid\">\r\n            \r\n                {\r\n                    images.map(img => (\r\n                        <GifGridItem\r\n                        key={img.id}\r\n                        {...img} \r\n                        />\r\n                    ))\r\n                }\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n\r\n    useEffect(()=>{\r\n        \r\n        getGifs(category)\r\n        .then(imgs =>{\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n\r\n        })\r\n    },[category])\r\n\r\n\r\n    return state; // {data:[], loading: true};\r\n} ","import React, { useState } from 'react';\r\nimport { AddCategory } from './AddCategory';\r\nimport { GifGrid } from './GifGrid';\r\n\r\n// snippet para crear componente rafc + tab\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    // const handleAdd = () =>{\r\n    //     //setCategories([...categories, 'HunterXHunter']);\r\n    //     setCategories(cat => [...cat, 'HunterXHunter']);\r\n    // }\r\n\r\n    return(\r\n      <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={setCategories}/>\r\n      <hr />\r\n\r\n      <ol>\r\n        {\r\n          categories.map( category => (\r\n            <GifGrid \r\n            key={category}\r\n            category={category}\r\n            />\r\n          ))\r\n        }\r\n      </ol>\r\n      </>\r\n    );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './components/GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}